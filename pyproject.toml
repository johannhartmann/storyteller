[tool.poetry]
name = "storyteller"
version = "0.1.0"
description = "Story telling agent"
authors = ["Johann Peter Hartmann <johann-peter.hartmann@mayfloer.de>"]
license = "MIT"
readme = "README.md"
packages = [{include = "storyteller_lib"}]

[tool.poetry.dependencies]
python = "^3.12"
langgraph = ">=0.4.8"
langgraph-checkpoint-sqlite = ">=2.0.10"
langchain-anthropic = ">=0.3.15"
langchain-core = ">=0.3.65"
langchain-google-genai = ">=2.1.5"
langchain-openai = ">=0.3.23"
openai = ">=1.86.0"
python-dotenv = ">=1.1.0"
psutil = ">=7.0.0"
langchain-community = "^0.3.25"
langchain-tavily = "^0.2.0"
tavily-python = "^0.5.0"
jinja2 = "^3.1.2"
urllib3 = "^2.5.0"
azure-cognitiveservices-speech = "1.44.0"
langsmith-mcp-server = "^0.0.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
black = "^24.0.0"
ruff = "^0.5.0"
mypy = "^1.10.0"
pre-commit = "^3.7.0"
vulture = "^2.11"

[tool.poetry.scripts]
storyteller = "run_storyteller:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true